open Parser

let token_to_int = function
    | EOF -> 0
    | KERNEL_SEP -> 1
    | DEF -> 2
    | IF -> 3
    | ELSE -> 4
    | ELIF -> 5
    | FOR -> 6
    | IN -> 7
    | RANGE -> 8
    | RETURN -> 9
    | NOT -> 10
    | AND -> 11
    | OR -> 12
    | IS -> 13
    | NONE -> 14
    | TRUE -> 15
    | FALSE -> 16
    | FLOAT f -> 1000 + (int_of_float (f *. 1000.0))
    | INT n -> 2000 + n
    | MIN -> 19
    | PRINT -> 20
    | SUM -> 21
    | ANY -> 22
    | ALL -> 23
    | ABS -> 24
    | MAX -> 25
    | ROUND -> 26
    | DIVMOD -> 27
    | LEN -> 28
    | ZIP -> 29
    | SLICE -> 30
    | STR -> 31
    | TYPE -> 32
    | ISINSTANCE -> 33
    | TUPLE -> 34
    | LIST -> 35
    | DICT -> 36
    | SET -> 37
    | TORCH -> 38
    | DL -> 39
    | LIBDEVICE -> 40
    | LIBSHMEM_DEVICE -> 41
    | TRITON_HELPERS -> 42
    | LANGUAGE -> 43
    | TRITON -> 44
    | CEIL_DIV -> 45
    | EXP -> 46
    | LOG -> 47
    | ATOMIC_ADD -> 48
    | ATOMIC_CAS -> 49
    | ATOMIC_MIN -> 50
    | ATOMIC_XCHG -> 51
    | LD -> 52
    | ST -> 53
    | TID -> 54
    | SYNC_THREADS -> 55
    | SHFL_DOWN_SYNC_I32 -> 56
    | SHFL_UP_SYNC_I32 -> 57
    | SHFL_SYNC_I32 -> 58
    | BALLOT_SYNC -> 59
    | FFS -> 60
    | TL_ARANGE -> 61
    | TL_ATOMIC_ADD -> 62
    | TL_ATOMIC_CAS -> 63
    | TL_ATOMIC_MIN -> 64
    | TL_ATOMIC_XCHG -> 65
    | TL_ASSUME -> 66
    | TL_BFLOAT16 -> 67
    | TL_BROADCAST_TO -> 68
    | TL_CAST -> 69
    | TL_CDIV -> 70
    | TL_CONSTEXPR -> 71
    | TL_CUMSUM -> 72
    | TL_DEBUG_BARRIER -> 73
    | TL_DEVICE_ASSERT -> 74
    | TL_DOT -> 75
    | TL_DOT_SCALED -> 76
    | TL_DTYPE -> 77
    | TL_EXP -> 78
    | TL_EXPERIMENTAL_DESCRIPTOR_LOAD -> 79
    | TL_EXPERIMENTAL_DESCRIPTOR_STORE -> 80
    | TL_EXTRA_CUDA_LIBDEVICE_ROUND -> 81
    | TL_FDIV -> 82
    | TL_FLOAT16 -> 83
    | TL_FLOAT32 -> 84
    | TL_FLOAT8E4NV -> 85
    | TL_FLOAT8E5 -> 86
    | TL_FLIP -> 87
    | TL_FLOOR -> 88
    | TL_FMA -> 89
    | TL_FULL -> 90
    | TL_INT16 -> 91
    | TL_INT2 -> 92
    | TL_INT32 -> 93
    | TL_INT64 -> 94
    | TL_INT8 -> 95
    | TL_INTERLEAVE -> 96
    | TL_JOIN -> 97
    | TL_LOAD -> 98
    | TL_LOG -> 99
    | TL_LOG2 -> 100
    | TL_MAKE_BLOCK_PTR -> 101
    | TL_MAKE_TENSOR_DESCRIPTOR -> 102
    | TL_MATH_EXP2 -> 103
    | TL_MATH_FAST_EXPF -> 104
    | TL_MATH_LOG2 -> 105
    | TL_MATH_MAX -> 106
    | TL_MATH_RSQRT -> 107
    | TL_MAX -> 108
    | TL_MAX_CONTIGUOUS -> 109
    | TL_MAXIMUM -> 110
    | TL_MIN -> 111
    | TL_MINIMUM -> 112
    | TL_MULTIPLE_OF -> 113
    | TL_NUM_PROGRAMS -> 114
    | TL_PABS -> 115
    | TL_PERMUTE -> 116
    | TL_PI32_T -> 117
    | TL_POINTER_TYPE -> 118
    | TL_PROGRAM_ID -> 119
    | TL_RAND -> 120
    | TL_RANGE -> 121
    | TL_RESHAPE -> 122
    | TL_RSQRT -> 123
    | TL_SIGMOID -> 124
    | TL_SPLIT -> 125
    | TL_SQRT -> 126
    | TL_STANDARD_LOG2 -> 127
    | TL_STATIC_ASSERT -> 128
    | TL_STATIC_PRINT -> 129
    | TL_STATIC_RANGE -> 130
    | TL_STORE -> 131
    | TL_SUM -> 132
    | TL_SWIZZLE2D -> 133
    | TL_TENSOR -> 134
    | TL_TO -> 135
    | TL_TRANS -> 136
    | TL_UINT32 -> 137
    | TL_VIEW -> 138
    | TL_WHERE -> 139
    | TL_ZEROS -> 140
    | PLUS -> 141
    | MINUS -> 142
    | TIMES -> 143
    | DIVIDE -> 144
    | GT -> 145
    | LT -> 146
    | EQ -> 147
    | ASSIGN -> 148
    | LPAREN -> 149
    | RPAREN -> 150
    | LBRACE -> 151
    | RBRACE -> 152
    | COLON -> 153
    | COMMA -> 154
    | INT_TYPE -> 155
    | FLOAT_TYPE -> 156
    | STR_TYPE -> 157
    | BOOL_TYPE -> 158
    | TUPLE_TYPE -> 159
    | LIST_TYPE -> 160
    | DICT_TYPE -> 161
    | SET_TYPE -> 162
    | UNION -> 163
    | ID s -> 3000 + (Hashtbl.hash s)
    | STRING s -> 4000 + (Hashtbl.hash s)

let string_of_token = function
    | EOF -> "EOF"
    | KERNEL_SEP -> "KERNEL_SEP"
    | DEF -> "DEF"
    | IF -> "IF"
    | ELSE -> "ELSE"
    | ELIF -> "ELIF"
    | FOR -> "FOR"
    | IN -> "IN"
    | RANGE -> "RANGE"
    | RETURN -> "RETURN"
    | NOT -> "NOT"
    | AND -> "AND"
    | OR -> "OR"
    | IS -> "IS"
    | NONE -> "NONE"
    | TRUE -> "TRUE"
    | FALSE -> "FALSE"
    | FLOAT f -> Printf.sprintf "FLOAT(%f)" f
    | INT n -> Printf.sprintf "INT(%d)" n
    | MIN -> "MIN"
    | PRINT -> "PRINT"
    | SUM -> "SUM"
    | ANY -> "ANY"
    | ALL -> "ALL"
    | ABS -> "ABS"
    | MAX -> "MAX"
    | ROUND -> "ROUND"
    | DIVMOD -> "DIVMOD"
    | LEN -> "LEN"
    | ZIP -> "ZIP"
    | SLICE -> "SLICE"
    | STR -> "STR"
    | TYPE -> "TYPE"
    | ISINSTANCE -> "ISINSTANCE"
    | TUPLE -> "TUPLE"
    | LIST -> "LIST"
    | DICT -> "DICT"
    | SET -> "SET"
    | TORCH -> "TORCH"
    | DL -> "DL"
    | LIBDEVICE -> "LIBDEVICE"
    | LIBSHMEM_DEVICE -> "LIBSHMEM_DEVICE"
    | TRITON_HELPERS -> "TRITON_HELPERS"
    | LANGUAGE -> "LANGUAGE"
    | TRITON -> "TRITON"
    | CEIL_DIV -> "CEIL_DIV"
    | EXP -> "EXP"
    | LOG -> "LOG"
    | ATOMIC_ADD -> "ATOMIC_ADD"
    | ATOMIC_CAS -> "ATOMIC_CAS"
    | ATOMIC_MIN -> "ATOMIC_MIN"
    | ATOMIC_XCHG -> "ATOMIC_XCHG"
    | LD -> "LD"
    | ST -> "ST"
    | TID -> "TID"
    | SYNC_THREADS -> "SYNC_THREADS"
    | SHFL_DOWN_SYNC_I32 -> "SHFL_DOWN_SYNC_I32"
    | SHFL_UP_SYNC_I32 -> "SHFL_UP_SYNC_I32"
    | SHFL_SYNC_I32 -> "SHFL_SYNC_I32"
    | BALLOT_SYNC -> "BALLOT_SYNC"
    | FFS -> "FFS"
    | TL_ARANGE -> "TL_ARANGE"
    | TL_ATOMIC_ADD -> "TL_ATOMIC_ADD"
    | TL_ATOMIC_CAS -> "TL_ATOMIC_CAS"
    | TL_ATOMIC_MIN -> "TL_ATOMIC_MIN"
    | TL_ATOMIC_XCHG -> "TL_ATOMIC_XCHG"
    | TL_ASSUME -> "TL_ASSUME"
    | TL_BFLOAT16 -> "TL_BFLOAT16"
    | TL_BROADCAST_TO -> "TL_BROADCAST_TO"
    | TL_CAST -> "TL_CAST"
    | TL_CDIV -> "TL_CDIV"
    | TL_CONSTEXPR -> "TL_CONSTEXPR"
    | TL_CUMSUM -> "TL_CUMSUM"
    | TL_DEBUG_BARRIER -> "TL_DEBUG_BARRIER"
    | TL_DEVICE_ASSERT -> "TL_DEVICE_ASSERT"
    | TL_DOT -> "TL_DOT"
    | TL_DOT_SCALED -> "TL_DOT_SCALED"
    | TL_DTYPE -> "TL_DTYPE"
    | TL_EXP -> "TL_EXP"
    | TL_EXPERIMENTAL_DESCRIPTOR_LOAD -> "TL_EXPERIMENTAL_DESCRIPTOR_LOAD"
    | TL_EXPERIMENTAL_DESCRIPTOR_STORE -> "TL_EXPERIMENTAL_DESCRIPTOR_STORE"
    | TL_EXTRA_CUDA_LIBDEVICE_ROUND -> "TL_EXTRA_CUDA_LIBDEVICE_ROUND"
    | TL_FDIV -> "TL_FDIV"
    | TL_FLOAT16 -> "TL_FLOAT16"
    | TL_FLOAT32 -> "TL_FLOAT32"
    | TL_FLOAT8E4NV -> "TL_FLOAT8E4NV"
    | TL_FLOAT8E5 -> "TL_FLOAT8E5"
    | TL_FLIP -> "TL_FLIP"
    | TL_FLOOR -> "TL_FLOOR"
    | TL_FMA -> "TL_FMA"
    | TL_FULL -> "TL_FULL"
    | TL_INT16 -> "TL_INT16"
    | TL_INT2 -> "TL_INT2"
    | TL_INT32 -> "TL_INT32"
    | TL_INT64 -> "TL_INT64"
    | TL_INT8 -> "TL_INT8"
    | TL_INTERLEAVE -> "TL_INTERLEAVE"
    | TL_JOIN -> "TL_JOIN"
    | TL_LOAD -> "TL_LOAD"
    | TL_LOG -> "TL_LOG"
    | TL_LOG2 -> "TL_LOG2"
    | TL_MAKE_BLOCK_PTR -> "TL_MAKE_BLOCK_PTR"
    | TL_MAKE_TENSOR_DESCRIPTOR -> "TL_MAKE_TENSOR_DESCRIPTOR"
    | TL_MATH_EXP2 -> "TL_MATH_EXP2"
    | TL_MATH_FAST_EXPF -> "TL_MATH_FAST_EXPF"
    | TL_MATH_LOG2 -> "TL_MATH_LOG2"
    | TL_MATH_MAX -> "TL_MATH_MAX"
    | TL_MATH_RSQRT -> "TL_MATH_RSQRT"
    | TL_MAX -> "TL_MAX"
    | TL_MAX_CONTIGUOUS -> "TL_MAX_CONTIGUOUS"
    | TL_MAXIMUM -> "TL_MAXIMUM"
    | TL_MIN -> "TL_MIN"
    | TL_MINIMUM -> "TL_MINIMUM"
    | TL_MULTIPLE_OF -> "TL_MULTIPLE_OF"
    | TL_NUM_PROGRAMS -> "TL_NUM_PROGRAMS"
    | TL_PABS -> "TL_PABS"
    | TL_PERMUTE -> "TL_PERMUTE"
    | TL_PI32_T -> "TL_PI32_T"
    | TL_POINTER_TYPE -> "TL_POINTER_TYPE"
    | TL_PROGRAM_ID -> "TL_PROGRAM_ID"
    | TL_RAND -> "TL_RAND"
    | TL_RANGE -> "TL_RANGE"
    | TL_RESHAPE -> "TL_RESHAPE"
    | TL_RSQRT -> "TL_RSQRT"
    | TL_SIGMOID -> "TL_SIGMOID"
    | TL_SPLIT -> "TL_SPLIT"
    | TL_SQRT -> "TL_SQRT"
    | TL_STANDARD_LOG2 -> "TL_STANDARD_LOG2"
    | TL_STATIC_ASSERT -> "TL_STATIC_ASSERT"
    | TL_STATIC_PRINT -> "TL_STATIC_PRINT"
    | TL_STATIC_RANGE -> "TL_STATIC_RANGE"
    | TL_STORE -> "TL_STORE"
    | TL_SUM -> "TL_SUM"
    | TL_SWIZZLE2D -> "TL_SWIZZLE2D"
    | TL_TENSOR -> "TL_TENSOR"
    | TL_TO -> "TL_TO"
    | TL_TRANS -> "TL_TRANS"
    | TL_UINT32 -> "TL_UINT32"
    | TL_VIEW -> "TL_VIEW"
    | TL_WHERE -> "TL_WHERE"
    | TL_ZEROS -> "TL_ZEROS"
    | PLUS -> "PLUS"
    | MINUS -> "MINUS"
    | TIMES -> "TIMES"
    | DIVIDE -> "DIVIDE"
    | GT -> "GT"
    | LT -> "LT"
    | EQ -> "EQ"
    | ASSIGN -> "ASSIGN"
    | LPAREN -> "LPAREN"
    | RPAREN -> "RPAREN"
    | LBRACE -> "LBRACE"
    | RBRACE -> "RBRACE"
    | COLON -> "COLON"
    | COMMA -> "COMMA"
    | INT_TYPE -> "INT_TYPE"
    | FLOAT_TYPE -> "FLOAT_TYPE"
    | STR_TYPE -> "STR_TYPE"
    | BOOL_TYPE -> "BOOL_TYPE"
    | TUPLE_TYPE -> "TUPLE_TYPE"
    | LIST_TYPE -> "LIST_TYPE"
    | DICT_TYPE -> "DICT_TYPE"
    | SET_TYPE -> "SET_TYPE"
    | UNION -> "UNION"
    | ID s -> Printf.sprintf "ID(%s)" s
    | STRING s -> Printf.sprintf "STRING(%s)" s